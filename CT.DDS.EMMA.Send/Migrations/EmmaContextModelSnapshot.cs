// <auto-generated />
using System;
using CT.DDS.EMMA.Send.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CT.DDS.EMMA.Send.Migrations
{
    [DbContext(typeof(EmmaContext))]
    partial class EmmaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CT.DDS.EMMA.Send.Models.Execution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("JobConfigId");

                    b.Property<int>("NewSendAttempts");

                    b.Property<int>("NewSendFails");

                    b.Property<int>("ResendAttempts");

                    b.Property<int>("ResendFails");

                    b.Property<string>("ResultText");

                    b.Property<string>("Sender")
                        .HasMaxLength(150);

                    b.Property<int>("SmtpConfigId");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("Status");

                    b.Property<string>("SysUser");

                    b.HasKey("Id");

                    b.HasIndex("JobConfigId");

                    b.HasIndex("SmtpConfigId");

                    b.ToTable("Execution","dbo");
                });

            modelBuilder.Entity("CT.DDS.EMMA.Send.Models.JobConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyTemplate")
                        .HasMaxLength(8000);

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(255);

                    b.Property<int>("DataRateDays");

                    b.Property<string>("JobName")
                        .IsRequired();

                    b.Property<int>("MessageResendLimit");

                    b.Property<string>("SenderAddress")
                        .HasMaxLength(255);

                    b.Property<string>("SenderName")
                        .HasMaxLength(50);

                    b.Property<string>("SubjectTemplate")
                        .HasMaxLength(150);

                    b.Property<DateTime>("SysEnd");

                    b.Property<DateTime>("SysStart");

                    b.Property<string>("SysUser");

                    b.Property<string>("SysUserNext");

                    b.Property<string>("ViewName")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("JobConfig","dbo");
                });

            modelBuilder.Entity("CT.DDS.EMMA.Send.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttemptCount");

                    b.Property<string>("Bcc");

                    b.Property<string>("Body");

                    b.Property<string>("Cc");

                    b.Property<string>("ErrorText");

                    b.Property<int>("ExecutionId");

                    b.Property<string>("From");

                    b.Property<int>("JobConfigId");

                    b.Property<int>("Status");

                    b.Property<string>("Subject");

                    b.Property<DateTime>("SysEnd");

                    b.Property<DateTime>("SysStart");

                    b.Property<string>("SysUser");

                    b.Property<string>("SysUserNext");

                    b.Property<string>("To");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionId");

                    b.HasIndex("JobConfigId");

                    b.ToTable("Message","dbo");
                });

            modelBuilder.Entity("CT.DDS.EMMA.Send.Models.SmtpConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfigName");

                    b.Property<string>("Host");

                    b.Property<string>("Password");

                    b.Property<int>("Port");

                    b.Property<int>("SecureSocketOptions");

                    b.Property<bool>("UseAuthentication");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("SmtpConfig");
                });

            modelBuilder.Entity("CT.DDS.EMMA.Send.Models.Execution", b =>
                {
                    b.HasOne("CT.DDS.EMMA.Send.Models.JobConfig", "JobConfig")
                        .WithMany()
                        .HasForeignKey("JobConfigId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CT.DDS.EMMA.Send.Models.SmtpConfig", "SmtpConfig")
                        .WithMany()
                        .HasForeignKey("SmtpConfigId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CT.DDS.EMMA.Send.Models.Message", b =>
                {
                    b.HasOne("CT.DDS.EMMA.Send.Models.Execution")
                        .WithMany("MessageQueue")
                        .HasForeignKey("ExecutionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CT.DDS.EMMA.Send.Models.JobConfig", "JobConfig")
                        .WithMany("Messages")
                        .HasForeignKey("JobConfigId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
